/* Problem Statement:
Write a function `int magic(int x, int n)` that takes two **positive integers** `x` and `n` as arguments, where:
- `x >= 0`
- `n` is an **integer between 0 and 9**.

The function should return a new number **y**, which is generated by **adding `n` to each digit** in `x` using **modulo 10 arithmetic**.

For each digit `d` in `x`, the corresponding digit `d'` in `y` will be: d' = (d + n) % 10
*/

import java.util.Scanner;

public class magicNo{
    public static void main(String[] args) {
        @SuppressWarnings("resource")
        Scanner sc= new Scanner(System.in);
        System.out.print("Enter a number(x):");
        int x=sc.nextInt();
        System.out.print("Enter a number(0<=n<=9):");
        int n=sc.nextInt();
        int d, finalAns = 0, faceValue = 1;
        int temp = x;

        if (x >= 0 && 0 <= n && n <= 9) {
            while (temp != 0) {
                d = temp % 10;
                System.out.println(d);
                finalAns += magic(d, n) * faceValue;
                faceValue *= 10;
                temp /= 10;
            }
            System.out.println("MAGIC NUMBER IS:" + finalAns);
        } else
            System.out.println("Enter valid Number!");
    }

    public static int magic(int a, int n) {
        return (a + n) % 10;
    }
}